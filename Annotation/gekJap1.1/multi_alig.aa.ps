%!PS-Adobe-2.0
%
/debug 0 def
/fsize 6 def
/padding 0 def
/chrwidth 5 def
/xstart  100 def
/yoffset  30 def
/xoffset xstart def
/graphlevel chrwidth 2 mul def
/chrscale 4e-7 def %% pixels/Gb
/bp2coor{
	/bpos exch def
	yoffset bpos chrscale mul sub
} def
/background{
	/bcolor exch def
	/blevel exch def
	/bend exch def
	/bstart exch def
	/by1 bstart bp2coor def
	/by2 bend   bp2coor def
	/bx1 xoffset blevel graphlevel mul add def
	/bx2 xoffset blevel 1 add graphlevel mul add def
    gsave
		newpath
		bx1 by1 moveto
		bx1 by2 lineto
		bx2 by2 lineto
		bx2 by1 lineto
		closepath
		bcolor aload pop setrgbcolor
		fill
    grestore
} def
/arrow{
%%%%%ArrowGlobals%%%%%
/alpha 10 def
/cosa alpha cos def
/sina alpha sin def
/R 30 def
/afill true def
%%%%%ArrowGlobals%%%%%
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	/dy y2 y1 sub def
	/dx x2 x1 sub def
	/l dx dx mul dy dy mul add sqrt def
	/cosb dx l div def
	/sinb dy l div def
	/coscos cosa cosb mul def
	/sinsin sina sinb mul def
	/sincos sina cosb mul def
	/cossin cosa sinb mul def
	%x3%
	x2
	coscos sinsin add
	R mul
	sub
	/x3 exch def
	%y3%
	y2
	sincos cossin sub
	R mul
	add
	/y3 exch def
	%x4%
	x2
	coscos sinsin sub
	R mul
	sub
	/x4 exch def
	%y4%
	y2
	cossin sincos add
	R mul
	sub
	/y4 exch def

	newpath
		x1 y1 moveto
		x2 y2 lineto
		0 0 0 setrgbcolor
		2 setlinewidth
	stroke
	newpath
		x3 y3 moveto
		x2 y2 lineto
		x4 y4 lineto
		0 0 0 setrgbcolor
		2 setlinewidth
		1 setlinejoin
		afill{
			gsave
			closepath
			fill
			grestore
		} if
	stroke
} def
/fsize 6 def
/ypadding 40 def
/width 500 def
%newpath
%width 700 moveto
%width 100 lineto
%0 0 0 setrgbcolor
%stroke
/height 700 def
/y 750 def
/x 150 def
/cxpad 1.7 def % Horizontal padding per character
/cypad 2.3 def % Vertical padding per character
/ydeb 100 def
/names_in_every_line true def

%Fonts

/namefont {
  /Arial-Bold findfont                                                                                    
  fsize scalefont                                                                                         
  setfont
} bind def

/seqfont  {
  /Arial findfont                                                                                    
  fsize scalefont                                                                                         
  setfont
} bind def

/minid 0.7 def   % Light blue for positions with a higher conservation
                 % Dark blue for completely conserved positions
/color_background [1 1 1] def
/color_font [0 0 0] def
/color1 [0.5 0.5 1] def
/color2 [0.8 0.8 1] def

/arrow{
	/alpha_R 150 def
	/afill true def
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	/modul x2 x1 sub dup mul y2 y1 sub dup mul add sqrt def
	/R modul 2 div def
	/alpha alpha_R R div def
	/cosa alpha cos def
    /sina alpha sin def
	/dy y2 y1 sub def
	/dx x2 x1 sub def
	/l dx dx mul dy dy mul add sqrt def
	/cosb dx l div def
	/sinb dy l div def
	/coscos cosa cosb mul def
	/sinsin sina sinb mul def
	/sincos sina cosb mul def
	/cossin cosa sinb mul def
	%x3%
	x2
	coscos sinsin add
	R mul
	sub
	/x3 exch def
	%y3%
	y2
	sincos cossin sub
	R mul
	add
	/y3 exch def
	%x4%
	x2
	coscos sinsin sub
	R mul
	sub
	/x4 exch def
	%y4%
	y2
	cossin sincos add
	R mul
	sub
	/y4 exch def

	newpath
		x1 y1 moveto
		x2 y2 lineto
		0 0 0 setrgbcolor
		1 setlinewidth
	stroke
	newpath
		x3 y3 moveto
		x2 y2 lineto
		x4 y4 lineto
		0 0 0 setrgbcolor
		1 setlinewidth
		1 setlinejoin
		afill{
			gsave
			closepath
			fill
			grestore
		} if
	stroke
} def

/mtext_size{
  /text exch def
  newpath
  0 0 moveto
  text false charpath 
  pathbbox
  /th exch def
  /tw exch def
  pop pop
  tw th
} def

/debug{
  30 string cvs print
  (
) print
} def

/pusharr{
  /val exch def
  /paarr exch def
  /n paarr length 1 add def
  /result n array def
  0 1 paarr length 1 sub{
    /i exch def
    result i paarr i get put
    
  } for
  result n 1 sub val put
  result
} def


/debugarr {
  /arr exch def
  arr {
    print
  } forall
  (
) print flush
} def

/textshade {
  /tscol exch def
  /tsy exch def
  /tsx exch def
  newpath
  tsx cw 2 div sub cy ch 4 div sub moveto
  0 ch rlineto
  cw 0 rlineto
  0 ch neg rlineto
  closepath
  tscol aload pop setrgbcolor
  gsave
  fill
  grestore
  0.5 setlinewidth
  stroke
} def


/getfreq{
  /gfres exch def
  /gfpos exch def
  /gfarr exch def
  /gfresult 0 def
  gfres (-) ne{
	  /gftotal gfarr length def
	  0 1 gftotal 1 sub {
		/gfi exch def
		/gftres gfarr gfi get gfpos get def
		gftres gfres eq {
		  /gfresult gfresult 1 add def
		} if
	  } for
	  /gfresult gfresult gftotal div def
  } if
  gfresult
} def

/write_names {
  namefont
  /tmpy cy def
  0 1 nseq 1 sub {
    /k exch def
	/name seqnames k get def
	name mtext_size pop
	/snw exch def
	/myx cx snw sub cw 1 mul sub def
	myx cy moveto name show
	/cy cy ch sub def
  } for
  /cy tmpy def
  seqfont
} bind def

/next_line{
  /cx x def
  /cy cy nseq ch mul sub 2 ch mul sub def
  /nextcy cy ch nseq mul sub def
  nextcy y height sub lt{
    grestore
    showpage
    gsave
    /cy y def
  } if
  names_in_every_line{
    write_names
  } if
} def

/addif{
  /aiai exch def
  aiai (-) eq {
    0
  } {
    1
  } ifelse
} def

/tostring{
  30 string cvs
} def

/highlight_this{
  cx cy ch 2 mul add cx cy ch add arrow
  seqfont
  /mypos arpos delta add def
  mypos tostring mtext_size
  /htth exch def
  /httw exch def
  cx httw 2 div sub cy htth 2 div add  ch 2 mul add moveto mypos tostring show
  
} def

/alig_render{
  /to exch def
  /from exch def
  /high exch def
  /arr exch def
  /cy y def
  /cx x def
  /nseq arr length def
  /seqnames 0 array def  % Array with names
  /seqs 0 array def      % Array with arrays of chars (seqs)
  /str1 arr 0 get 1 get def
  /alig_length str1 length def
  /arhln 0 def           % Current highlight array element
  /arhle high arhln get def
  /hln high length def
  % Pre-processing
  arr{
    /el exch def
	/seqname el 0 get def
	/seq el 1 get def
	/seqnames seqnames seqname pusharr def
	/tmp alig_length array def
	0 1 alig_length 1 sub {
	  /i exch def
	  /char seq i 1 getinterval def
	  tmp i char put
	} for
	/seqs seqs tmp pusharr def
  } forall
  % Set seqnames
  namefont
  write_names
  % Set seqs
  seqfont
  0 1 alig_length 1 sub {
    % Should I print this column?
	/printme arpos 2 add from gt arpos to lt and def  
    /i exch def
	  cx width gt{
	    next_line
	  } if
	  arpos arhle eq{   % highlight this one
	    printme {highlight_this} if
	    % Get next highlight?
	    arhln hln 1 sub lt{
	      /arhln arhln 1 add def
	      /arhle high arhln get def
	    } if
	  } if
	  /arpos arpos seqs 0 get i get addif add def
	  printme{
	      /cx cx cw add def
		  /mytmpy cy def
		  0 1 nseq 1 sub {
			/freq 0 def
			/j exch def
			/res seqs j get i get def
			/mycol color_background def
			/freq seqs i res getfreq def
			freq 1 eq {
			  /mycol color1 def
			} {
			  freq minid gt{
				/mycol color2 def
			  } if 
			} ifelse
			cx cy mycol textshade
			/tw res mtext_size pop 2 div def
			color_font aload pop setrgbcolor
			cx tw sub cy moveto res show
			/cy cy ch sub def
		  } for
		  /cy mytmpy def
	  } if
  } for
} def

seqfont
(M) mtext_size
/mth exch def
/mtw exch def
/cw mtw cxpad mul def   % Character height plus padding
/ch mth cypad mul def   % Character width plus padding
% Draw



/delta 0 def
/arpos 1 1 sub def
/startpos arpos tostring def
startpos mtext_size
/sth exch def
/stw exch def
x cw add stw 2 div sub y ch add sth 1 mul add moveto
%startpos show
/alig [
[(hg) (MAA-R---LLLLGILLLLLPLPVPAPCHTAARSECKRSHKFVPGAWLAGEGVDVTSLRRSGSFPVDTQRFLRPDGTCTLCENALQE-GTLQRLPLALTNWRAQGSGCQRHVTRAKVSSTEAVARDAARSIRNDWKVGLDVTP--KPTSNVHVSVAGSHSQAANFAAQKTHQDQYSFSTDTVECRFYSFHVVHTPP-LHPDFKRALGDLPHHFNASTQPAYLRLISNYGTHFIRAVELGGRISALTALRTCELALEGLTDNEVEDCLTVEAQVNIGIHGSI--SAEAKACEEKKKKHKMTASFHQTYRERHSEVVGGHHTSINDLLFGIQAGPEQYSAWVNSLPGSPGLVDYTLEPLHVLLDSQDPRREALRRALSQYLTDRARWRDCSRPCPPGRQKSPRDPCQCVCHGSAVTTQDCCPRQRGLAQLEVTFIQAWGLWGDWFTATDAYVKLFFGGQELRTSTVWDNNNPIWSVRLDFGDVLLATG-GPLRLQVWDQDSGRDDDLLGTCDQAPKSG-SHEVRCNLNHGHLKFRYHARCLPHLGGGTCLDYVPQMLLGEPPGNRSGAVW-------------------------------------------)]
[(PRF1_hgA) (MPRLP-LFLAACLPFLSLLPRRASAHCQLFPKSTCEQHSAFVPGHNLAGEGIDITTLQRKGAYLVDTSQWLDPNGTCVLCRNPLMD-GQLQRLPLAGADWRVH-VACHRQVSSSVEHSDVDVAKALAGEVKNNWKMELNLPKEVESIAKGQVVLVGARSQMVVYAHEKAQQDRYSFVRHEVSCQYYRLRLLPRPTLLSPHFSQAVRNLPSKHDPE---EYQHFIDTYGTHYISQAQLGGRVRNLLAVRTCGATLAGLTASDIKDCLTLEASLGP----DWMSHSLSIKCHELQ-RNQAKGMFWEAYGQRRTEVVGGNGQ--VELLFAEPGEILQFSEWIENLKTSPGVVSYSLLPVHTLVDRGDPRREMLRAAVRDYIAQRALWRNCTQQCPGRSYASSRDPCVCMCEPDAITDTGCCARERGLARLRVHIQNGSGLWADHFSATDAYVKVLFQGREMRTGFIKNNNQPWWSETLDFGPIKLTGL-NYIEVQVWDKDL-WHDDLLATCYEGLVTGGEVWKKCYPARGLVEYYYVLECGPSLGGNSCHDYVPQKQH*------------------------------------------------------)]
[(PRF1_hgB) (MLK---ANPTSAVSLLLLFLSGVSPKCQEYPEDVCQEHEGFVPGHNLAGEGFDVTTLERKGASLLDMTQWESPDGTCNLCQNPLLEDKPLQRLPLAAADWEVD-VSCRRKLHSSLQESGISVVQGAGADVKNDWRMGLEVEV--KPEARAQVTLAGSHSKMADFSIDKSGRDKYSFASHEVSCVFYKFRIGHHQP-LTQHFRRALKVLPAKYHRPSWLEYHQLIETYGTHFITKLHLGGRVRDVTAIRECETVLDGMSAEEVKDCLSVEASASIGAGKVKMDAAY-QKCEEMRNKQSFKGSFHQMYTERHTEIVGGNSH--ADLLFSDDLSKEAFQEWAEGLKTMPGLVSYSLAPIHTLVAKEDPRRESLRQAVSEYVTRRALWRNCTQPCSPGTQRSTRDPCSCVCPNNGNTNSMCCSKKRGLAKLTVTIKRAHGLWGDYSTSTDAYVKVLFQGKESRTSTVWNNNDPVWNIHFDLGNVQLLGETSKLRVQVWDEDNKYDDDLLGTCEESLQSGERQEKLCYLDHGRLDFQYHLVCGPHLGGHHCMDYTPQQPRYEGTFLQRMGKGD---------Q--GAGDASARGPAPVLTGMAQASPISSDTRS*)]
[(PRF1_hgC) (MSRLSFFFLAASFEFLSLLRPTASGHCQAFSSDECQKSTSFVPGHNLIGKGLDITTLSRKGASVVDTSQWRGANGTCNLCRNPLMD-GEMQRLPLEAVDWEVY-SKCQDQAAASVEHSMLDVANAMTAEVTNDWQADLGLPMIQ-------AAFGGSQSRIILRAHKYSQRDSYSFIKHETYCENYQLLSS--PSLLASHFSHDVSSLPEEYRRM---EYQRLIDIYGTHYISQVKLGAQRRHLFAVRNCEAVLNGFTAFDLKNCLNMNSSLGW----FWKNHFYSSKCHQLW-RDDIKGNLRGTFVKWHTAVMGGSEA--EKVLFAGG---QHSLEWMRSAKRHPDVVSYSLTPLHTLLKQSEPRRKALKQAISDYITERALRRSCDGQCPYNGFRSREDHCTCMCHTNNLNNNMCCAREWGKARLKFYIRRAANLWGDPFGAADAYVRVLFQGRTKRTRVIDGNNSPQWHETLDFGTVTLAHY-NTYKLEVWDSDH-WEDDLLDRFLGEMKAGGTYECKGYLDYGHIEFSYTLECAPTLGGPSCQTYIPLKRPASSS*--------------------------------------------------)]
[(PRF1_hgD) (MSGLRFFFLAASLGFLSLLKVATSSHCQVFPNDDCQKSTSFVPGHNLIGEGLDITTLRRKGASVVDTSQWRGPNGTCNLCRNPLMD-REMQRLPLAAVGWRVH-SKCDQRVATSVEHSVLGVANAMTTEVTDDWKADLELPAIQ-------AAFGGSRSPITLRAQEYSRRDSYSFIKHETFCTYYRLGLPPRRPLLASHFSHDVSNLPKEYHQK---EYQGFINIYGTHYVSQVELGAQRRHLYFVQNCAAALGGLTVFDLENCLTS-------------EALYSSKCHQLW-KGATKGDSGDPFVKWHMEVMGGDEP--EKVFLPEA---QNFSEWMRSAKRHPEVVSYSLTSLHTLLKRSDPRRKALKQAISDYITERALRRSCDGQCPYNGFRSREDHCACMCHANDLHDNMCCARERGKARLRFYIRRAANLYGDDFSGTDGYVRVLFQGRAMRTEIIDGDNSPQWHETLDFGTVTLADR-NTYKLEVWDSDP-HEDDLLKRFQDEMKAGGTDERIGYLDYGHIEFSYTLECAPSLGGPSCQTYIPLKRPASSSRNTSPGLTTRLRQARDLDRNRQLKNRPGRGPA--ESGESQEVSEGSGS*--)]

] def
/highlight [20 40 60 80 100 120 140 160 180 200 220 240 260 280 300 320 340 360 380 400 420 440 460 480 500 520 540 560 580 600 620 640 660 680 700 720 740 760 780 800 820 840 860 880 900 920 940 960 980 1000 1020 1040 1060 1080 1100 1120 1140 1160 1180 1200 1220 1240 1260 1280 1300 1320 1340 1360 1380 1400 1420 1440 1460 1480 1500 1520 1540 1560 1580 1600 1620 1640 1660 1680 1700 1720 1740 1760 1780 1800 1820 1840 1860 1880 1900 1920 1940 1960 1980 2000 2020 2040 2060 2080 2100 2120 2140 2160 2180 2200 2220 2240 2260 2280 2300 2320 2340 2360 2380 2400 2420 2440 2460 2480 2500 2520 2540 2560 2580 2600 2620 2640 2660 2680 2700 2720 2740 2760 2780 2800 2820 2840 2860 2880 2900 2920 2940 2960 2980 3000 3020 3040 3060 3080 3100 3120 3140 3160 3180 3200 3220 3240 3260 3280 3300 3320 3340 3360 3380 3400 3420 3440 3460 3480 3500 3520 3540 3560 3580 3600 3620 3640 3660 3680 3700 3720 3740 3760 3780 3800 3820 3840 3860 3880 3900 3920 3940 3960 3980 4000 4020 4040 4060 4080 4100 4120 4140 4160 4180 4200 4220 4240 4260 4280 4300 4320 4340 4360 4380 4400 4420 4440 4460 4480 4500 4520 4540 4560 4580 4600 4620 4640 4660 4680 4700 4720 4740 4760 4780 4800 4820 4840 4860 4880 4900 4920 4940 4960 4980 5000 5020 5040 5060 5080 5100 5120 5140 5160 5180 5200 5220 5240 5260 5280 5300 5320 5340 5360 5380 5400 5420 5440 5460 5480 5500 5520 5540 5560 5580 5600 5620 5640 5660 5680 5700 5720 5740 5760 5780 5800 5820 5840 5860 5880 5900 5920 5940 5960 5980 6000 6020 6040 6060 6080 6100 6120 6140 6160 6180 6200 6220 6240 6260 6280 6300 6320 6340 6360 6380 6400 6420 6440 6460 6480 6500 6520 6540 6560 6580 6600 6620 6640 6660 6680 6700 6720 6740 6760 6780 6800 6820 6840 6860 6880 6900 6920 6940 6960 6980 7000 7020 7040 7060 7080 7100 7120 7140 7160 7180 7200 7220 7240 7260 7280 7300 7320 7340 7360 7380 7400 7420 7440 7460 7480 7500 7520 7540 7560 7580 7600 7620 7640 7660 7680 7700 7720 7740 7760 7780 7800 7820 7840 7860 7880 7900 7920 7940 7960 7980 8000 8020 8040 8060 8080 8100 8120 8140 8160 8180 8200 8220 8240 8260 8280 8300 8320 8340 8360 8380 8400 8420 8440 8460 8480 8500 8520 8540 8560 8580 8600 8620 8640 8660 8680 8700 8720 8740 8760 8780 8800 8820 8840 8860 8880 8900 8920 8940 8960 8980 9000 9020 9040 9060 9080 9100 9120 9140 9160 9180 9200 9220 9240 9260 9280 9300 9320 9340 9360 9380 9400 9420 9440 9460 9480 9500 9520 9540 9560 9580 9600 9620 9640 9660 9680 9700 9720 9740 9760 9780 9800 9820 9840 9860 9880 9900 9920 9940 9960 9980 10000 ] def
alig highlight 1 10000 alig_render

showpage